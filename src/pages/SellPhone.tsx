import React, { useState, FormEvent } from "react";
import Lottie from "lottie-react";
import emailjs from "@emailjs/browser";
import phoneLottie from "../assets/lottie/phone-gradient.json";

const SellPhone: React.FC = () => {
  const [image, setImage] = useState<File | null>(null);
  const [formData, setFormData] = useState({
    model: "",
    imei: "",
    condition: "",
    expectedPrice: "",
    name: "",
    phone: "",
    email: "",
    message: "",
  });

  const handleChange = (
    e: React.ChangeEvent<
      HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement
    >
  ) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
  };

  const handleSubmit = (e: FormEvent) => {
    e.preventDefault();

    const required = ["model", "imei", "condition", "name", "phone", "email"];
    for (const field of required) {
      if (!formData[field as keyof typeof formData]) {
        alert("–ú–æ–ª—è, –ø–æ–ø—ä–ª–Ω–µ—Ç–µ –≤—Å–∏—á–∫–∏ –∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–∏ –ø–æ–ª–µ—Ç–∞.");
        return;
      }
    }

    const emailParams = {
      ...formData,
      to_email: "xdbatza2p@gmail.com",
    };

    emailjs
      .send("service_02z97za", "template_mifzi4h", emailParams, "agrLyKnz58Ldt4rrf")
      .then(() => {
        fetch(import.meta.env.VITE_API_URL + "/api/sell-request", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(formData),
        })
          .then((res) => res.json())
          .then((data) => {
            console.log("‚úÖ Sell request saved:", data);
            alert("–ó–∞—è–≤–∫–∞—Ç–∞ –µ –∏–∑–ø—Ä–∞—Ç–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!");
            setFormData({
              model: "",
              imei: "",
              condition: "",
              expectedPrice: "",
              name: "",
              phone: "",
              email: "",
              message: "",
            });
            setImage(null);
          })
          .catch((err) => {
            console.error("‚ùå Error saving sell request:", err);
            alert("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞–ø–∞–∑–≤–∞–Ω–µ –≤ –±–∞–∑–∞—Ç–∞.");
          });
      })
      .catch((err) => {
        console.error("‚ùå Error sending email:", err);
        alert("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ –∏–º–µ–π–ª.");
      });
  };

  return (
    <section className="min-h-screen py-24 px-4 bg-gradient-to-b from-[#ff6a00] via-[#d7263d] to-[#1f0f2f] text-white">
      <div className="max-w-7xl mx-auto grid md:grid-cols-2 gap-12 items-center">
        {/* Right */}
        <div className="flex flex-col items-center justify-start space-y-6">
          <Lottie animationData={phoneLottie} loop autoplay className="w-72" />
          <div className="text-center max-w-md space-y-5 text-base md:text-lg leading-relaxed text-white">
            <p>
              üì± –ó–∞ –¥–∞ –Ω–∞–º–µ—Ä–∏—Ç–µ IMEI –Ω–æ–º–µ—Ä–∞ –Ω–∞ –≤–∞—à–∏—è iPhone, –æ—Ç–∏–¥–µ—Ç–µ –≤ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b> ‚Üí <b>–û–±—â–∏</b> ‚Üí <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>.
            </p>
            <p className="font-bold text-xl">–ù–∞–π-–¥–æ–±—Ä–∏—Ç–µ –æ—Ñ–µ—Ä—Ç–∏. –ë–µ–∑ –∏–∑–ª–∏—à–Ω–æ —á–∞–∫–∞–Ω–µ.</p>
            <p>–ö—É–ø—É–≤–∞–º–µ 99% –æ—Ç —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ç–∞ ‚Äî –±—ä—Ä–∑–æ, –ª–µ—Å–Ω–æ –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ.</p>
            <p className="font-semibold text-lg">–ù–∞—à–∏—è—Ç –µ–∫–∏–ø –≥–∞—Ä–∞–Ω—Ç–∏—Ä–∞:</p>
            <ul className="text-left space-y-2">
              <li>üö´ –ë–µ–∑ –±–µ–∑–∫—Ä–∞–π–Ω–∏ –ø—Ä–µ–≥–æ–≤–æ—Ä–∏</li>
              <li>üî• –ù–∞–π-–¥–æ–±—Ä–∏—Ç–µ –ø–∞–∑–∞—Ä–Ω–∏ —Ü–µ–Ω–∏</li>
              <li>üíµ –ú–æ–º–µ–Ω—Ç–∞–ª–Ω–æ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –∏ –∏–∑–ø–ª–∞—â–∞–Ω–µ</li>
            </ul>
            <p className="italic">
              –ù–µ –∫—É–ø—É–≤–∞–º–µ —Å–∞–º–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∏ —Å –≤–æ–¥–Ω–∏ –ø–æ–≤—Ä–µ–¥–∏ –∏–ª–∏ –Ω–µ—Ä–µ–º–æ–Ω—Ç–∏—Ä—É–µ–º–∏ –¥–µ—Ñ–µ–∫—Ç–∏.
            </p>
          </div>
        </div>

        {/* Left */}
        <div className="bg-white/5 backdrop-blur-md p-8 rounded-2xl shadow-lg border border-white/10">
          <h2 className="text-3xl font-bold text-white mb-6">–ü—Ä–æ–¥–∞–π—Ç–µ –≤–∞—à–∏—è iPhone</h2>

          <form className="space-y-4" onSubmit={handleSubmit}>
            <div>
              <label className="block mb-1">–ú–æ–¥–µ–ª –Ω–∞ iPhone</label>
              <select
                name="model"
                value={formData.model}
                onChange={handleChange}
                className="w-full p-2 rounded bg-gray-800 text-white"
              >
                <option value="">–ò–∑–±–µ—Ä–µ—Ç–µ –º–æ–¥–µ–ª</option>
                {["X", "XR", "XS", "11", "12", "13", "14", "15", "16"].flatMap(
                  (m) => [
                    `iPhone ${m}`,
                    `iPhone ${m} Pro`,
                    `iPhone ${m} Pro Max`,
                  ]
                ).map((m) => (
                  <option key={m} value={m}>{m}</option>
                ))}
              </select>
            </div>

            <div>
              <label className="block mb-1">IMEI –Ω–æ–º–µ—Ä</label>
              <input
                type="text"
                name="imei"
                value={formData.imei}
                onChange={handleChange}
                className="w-full p-2 rounded bg-gray-800 text-white"
              />
            </div>

            <div>
              <label className="block mb-1">–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å—ä—Å—Ç–æ—è–Ω–∏–µ—Ç–æ</label>
              <textarea
                name="condition"
                value={formData.condition}
                onChange={handleChange}
                className="w-full p-2 rounded bg-gray-800 text-white"
                rows={4}
              />
            </div>

            <div>
              <label className="block mb-1">–ö–∞—á–µ—Ç–µ —Å–Ω–∏–º–∫–∞ (–ø–æ –∏–∑–±–æ—Ä)</label>
              <input
                type="file"
                className="w-full"
                accept="image/*"
                onChange={(e) => setImage(e.target.files?.[0] || null)}
              />
            </div>

            <div>
              <label className="block mb-1">–û—á–∞–∫–≤–∞–Ω–∞ —Ü–µ–Ω–∞ (–ø–æ –∏–∑–±–æ—Ä)</label>
              <input
                type="number"
                name="expectedPrice"
                value={formData.expectedPrice}
                onChange={handleChange}
                className="w-full p-2 rounded bg-gray-800 text-white"
              />
            </div>

            <div className="grid grid-cols-2 gap-4">
              <div>
                <label className="block mb-1">–ò–º–µ</label>
                <input
                  type="text"
                  name="name"
                  value={formData.name}
                  onChange={handleChange}
                  className="w-full p-2 rounded bg-gray-800 text-white"
                />
              </div>
              <div>
                <label className="block mb-1">–¢–µ–ª–µ—Ñ–æ–Ω</label>
                <input
                  type="tel"
                  name="phone"
                  value={formData.phone}
                  onChange={handleChange}
                  className="w-full p-2 rounded bg-gray-800 text-white"
                />
              </div>
            </div>

            <div>
              <label className="block mb-1">–ò–º–µ–π–ª</label>
              <input
                type="email"
                name="email"
                value={formData.email}
                onChange={handleChange}
                className="w-full p-2 rounded bg-gray-800 text-white"
              />
            </div>

            <div>
              <label className="block mb-1">–°—ä–æ–±—â–µ–Ω–∏–µ (–ø–æ –∏–∑–±–æ—Ä)</label>
              <textarea
                name="message"
                value={formData.message}
                onChange={handleChange}
                className="w-full p-2 rounded bg-gray-800 text-white"
                rows={3}
              />
            </div>

            <button
              type="submit"
              className="w-full mt-6 bg-black/60 hover:bg-black/80 p-3 rounded text-white font-semibold transition"
            >
              –ò–∑–ø—Ä–∞—Ç–∏ –∑–∞—è–≤–∫–∞
            </button>
          </form>
        </div>
      </div>
    </section>
  );
};

export default SellPhone;
